name: Build Docker Image
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "The tag of the image to build"
        required: true
        type: string
      is_latest:
        description: "Push as latest?"
        required: false
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  ORG: cometbft
  IMAGE_NAME: cometbft-db-testing
  GIT_TAG: "${{ inputs.tag }}"

jobs:
  build-image-at-tag:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            platform: linux/amd64
          - os: ubuntu-24.04-arm
            platform: linux/arm64
    runs-on: ${{ matrix.os }}
    outputs:
      digest_${{ matrix.platform }}: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "${{ env.GIT_TAG }}"
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          file: ./tools/Dockerfile
          tags: |
            ${{ env.ORG }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }}
          push: true

  merge:
    runs-on: ubuntu-latest
    needs: build-image-at-tag
    steps:
      - name: Get sanitized Docker tag
        run: echo "DOCKER_TAG=$(echo $GIT_TAG | sed 's/[^a-zA-Z0-9\.]/-/g')" >> $GITHUB_ENV

      - name: Login to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create Multi-Arch Manifest
        run: |
          docker buildx imagetools create \
            --tag ${{ env.ORG }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG }} \
            ${{ env.ORG }}/${{ env.IMAGE_NAME }}@${{ needs.build-image-at-tag.outputs.digest_linux_amd64 }} \
            ${{ env.ORG }}/${{ env.IMAGE_NAME }}@${{ needs.build-image-at-tag.outputs.digest_linux_arm64 }}

      - name: Tag and Push Latest (if applicable)
        if: ${{ inputs.is_latest == true }}
        run: |
          docker buildx imagetools create \
            --tag ${{ env.ORG }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.ORG }}/${{ env.IMAGE_NAME }}@${{ needs.build-image-at-tag.outputs.digest_linux_amd64 }} \
            ${{ env.ORG }}/${{ env.IMAGE_NAME }}@${{ needs.build-image-at-tag.outputs.digest_linux_arm64 }}
